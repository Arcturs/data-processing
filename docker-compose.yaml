version: "3"
services:
  namenode:
    platform: linux/amd64
    image: apache/hadoop:3.4.1
    hostname: namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - 9870:9870
      - 9000:9000
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
      HADOOP_HOME: "/opt/hadoop"
    volumes:
      - ../src/:/src/
      - "/Users/a.sashina/IdeaProjects/data-processing/data/big.txt:/tmp/data/big.txt"
      - "/Users/a.sashina/IdeaProjects/data-processing/data/web-Google.txt:/tmp/data/web-Google.txt"

  datanode1:
    platform: linux/amd64
    image: apache/hadoop:3.4.1
    command: [ "hdfs", "datanode" ]
    env_file:
      - ./config
    environment:
      HADOOP_HOME: "/opt/hadoop"
    volumes:
      - ../src/:/src/

  datanode2:
    platform: linux/amd64
    image: apache/hadoop:3.4.1
    command: [ "hdfs", "datanode" ]
    env_file:
      - ./config
    environment:
      HADOOP_HOME: "/opt/hadoop"
    volumes:
      - ../src/:/src/

  resourcemanager:
    platform: linux/amd64
    image: apache/hadoop:3.4.1
    hostname: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    ports:
      - 8088:8088
    env_file:
      - ./config
    environment:
      HADOOP_HOME: "/opt/hadoop"
    volumes:
      - ../src/:/src/

  nodemanager:
    platform: linux/amd64
    image: apache/hadoop:3.4.1
    command: [ "yarn", "nodemanager" ]
    env_file:
      - ./config
    environment:
      HADOOP_HOME: "/opt/hadoop"
    volumes:
      - ../src/:/src/

  spark-master:
    image: bitnami/spark:3.2.4
    environment:
      JDK_JAVA_OPTIONS: --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
      SPARK_MODE: master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - "./spark-logs:/spark/logs"
      - "./data/Books_rating.csv:/Users/a.sashina/IdeaProjects/data-processing/data/Books_rating.csv"
      - "./data/books_data.csv:/Users/a.sashina/IdeaProjects/data-processing/data/books_data.csv"
      - "/tmp/spark:/tmp/spark"

  spark-worker-1:
    image: bitnami/spark:3.2.4
    depends_on:
      - spark-master
    environment:
      JDK_JAVA_OPTIONS: --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    volumes:
      - "./spark-logs:/spark/logs"
      - "./data/Books_rating.csv:/Users/a.sashina/IdeaProjects/data-processing/data/Books_rating.csv"
      - "./data/books_data.csv:/Users/a.sashina/IdeaProjects/data-processing/data/books_data.csv"
      - "/tmp/spark:/tmp/spark"

  spark-worker-2:
    image: bitnami/spark:3.2.4
    depends_on:
      - spark-master
    environment:
      JDK_JAVA_OPTIONS: --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    volumes:
      - "./spark-logs:/spark/logs"
      - "./data/Books_rating.csv:/Users/a.sashina/IdeaProjects/data-processing/data/Books_rating.csv"
      - "./data/books_data.csv:/Users/a.sashina/IdeaProjects/data-processing/data/books_data.csv"
      - "/tmp/spark:/tmp/spark"

  spark-worker-3:
    image: bitnami/spark:3.2.4
    depends_on:
      - spark-master
    environment:
      JDK_JAVA_OPTIONS: --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    volumes:
      - "./spark-logs:/spark/logs"
      - "./data/Books_rating.csv:/Users/a.sashina/IdeaProjects/data-processing/data/Books_rating.csv"
      - "./data/books_data.csv:/Users/a.sashina/IdeaProjects/data-processing/data/books_data.csv"
      - "/tmp/spark:/tmp/spark"

  event-generator:
    image: event-generator
    container_name: event-generator
    build:
      context: event-generator/
    ports:
      - "8081:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: host.docker.internal:29092
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "book.reviews:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "7777:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181